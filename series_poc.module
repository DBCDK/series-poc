<?php //

/**
 * @file
 * Showing examples off series in UI
 */



function series_poc_menu()
{
  $items = array();

  $items['serier'] = array(
    'title' => 'Series',
    'page callback' => 'series_poc_search',
    'access arguments' => array('access content'),
  );

  return $items;
}


function series_poc_theme($existing, $type, $theme, $path)
{
  return array(
    'series_poc_main' => array(
      'variables' => array(
        'items' => NULL,
        'title' => NULL,
        'creators' => NULL,
        'abstract' => NULL,
        'covers' => NULL,
        'read_at_will' => NULL,
        'alt_title' => NULL,
      ),
      'template' => 'series-main-content',
      'path' => $path . '/templates',
    ),


    'universe_poc_main' => array(
      'variables' => array(
        'universe' => NULL
      ),
      'template' => 'universe-main-content',
      'path' => $path . '/templates',
    ),

    'universe_poc_single_works' => array(
      'variables' => array(
        'items' => NULL
      ),
      'template' => 'universe-single-works',
      'path' => $path . '/templates',
    ),

    'series_poc_main_all' => array(
      'variables' => array(
        'items' => NULL
      ),
      'template' => 'series-main-content-all',
      'path' => $path . '/templates',
    ),

    'series_poc_breadcrumbs' => array(
      'variables' => array(
        'items' => NULL
      ),
      'template' => 'series-breadcrumb',
      'path' => $path . '/templates',
    ),

    'series_poc_menu' => array(
      'variables' => array(
        'items' => NULL
      ),
      'template' => 'series-menu',
      'path' => $path . '/templates',
    ),

    'series_poc_item' => array(
      'variables' => array(
        'item' => NULL,
      ),
      'template' => 'series-item',
      'path' => $path . '/templates',
    ),

    'series_poc_all_item' => array(
      'variables' => array(
        'item' => NULL,
      ),
      'template' => 'series-all-item',
      'path' => $path . '/templates',
    ),

    'series_poc_all_universe_item' => array(
      'variables' => array(
        'item' => NULL,
      ),
      'template' => 'universes-all-item',
      'path' => $path . '/templates',
    ),

    'series_poc_object' => array(
      'variables' => array(
        'item' => NULL,
      ),
      'template' => 'series-object',
      'path' => $path . '/templates',
    ),

    'series_poc_object_item' => array(
      'variables' => array(
        'item' => NULL,
      ),
      'template' => 'series-object-item',
      'path' => $path . '/templates',
    ),

    'series_poc_page' => array(
      'variables' => array(
        'items' => NULL,
        'breadcrumb' => NULL,
        'menu' => NULL,
        'select' => NULL,
      ),
      'template' => 'series-poc-page',
      'path' => $path . '/templates',
    ),
  );
}

/**
 * Implements hook_ctools_plugin_directory().
 *
 * It simply tells panels where to find the .inc files that define various
 * args, contexts, content_types.
 */
function series_poc_ctools_plugin_directory($module, $plugin)
{
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

function series_poc_search()
{
  $parameters = drupal_get_query_parameters();
  $select = '';
  $client = new SeriesServiceClient();
  $menuObject = new Menu();

  if (isset($parameters['series'])) {
    $series_data_from_api = $client->get_works_in_series($parameters['series']);
    $series = new Series();
    $items = $series->handle_series($series_data_from_api);
    $menu = $menuObject->handle_menu_series($series_data_from_api);
    $bread_crumb = series_poc_get_breadcrumb($series_data_from_api);
  } else if (isset($parameters['universe'])) {
    $universe_data_from_api = $client->get_universe_with_series($parameters['universe']);
    $universe = new Universe();
    $items = $universe->handle_universe($universe_data_from_api);
    $menu = $menuObject->handle_menu_universe($universe_data_from_api);
    $bread_crumb = series_poc_get_breadcrumb($universe_data_from_api, true);
  } else {

    if (isset($parameters['show']) && $parameters['show'] == 'universe') {
      $all_universes = $client->get_all_series('universe');
      $universe = new Universe();
      $items = $universe->show_all_universes($all_universes);
      $menu = $menuObject->handle_menu_categories();
      $bread_crumb = series_poc_get_breadcrumb();
    } else {
      $series = new Series();
      $all_series = $client->get_all_series('series');
      $items = $series->show_all_series($all_series);
      $menu = $menuObject->handle_menu_categories();
      $bread_crumb = series_poc_get_breadcrumb();
      $select = series_poc_get_select(false);
    }
  }

  drupal_add_js(drupal_get_path('module', 'ting_covers') . '/js/ting-covers.js');
  return theme('series_poc_page', array('items' => $items, 'breadcrumb' => $bread_crumb, 'menu' => $menu, 'select' => $select));
}

function series_poc_get_select($is_universe)
{
  $links = array();
  $parameters = drupal_get_query_parameters();
  $options = array(
    'html' => TRUE,
  );
  if (isset($parameters['category'])) {
    $options['query'] = array('category' => $parameters['category']);
  }
  $universe_options = $options;
  $universe_options['query']['show'] = 'universe';
  if ($is_universe) {
    $universe_options['attributes'] = array('class' => array('series_poc-select-item-selected'));
  } else {
    $options['attributes'] = array('class' => array('series_poc-select-item-selected'));
  }
  $links[] = l('Serier', '/serier', $options);
  $links[] = l('Universer', '/serier', $universe_options);
  return implode('', $links);
}

function series_poc_get_breadcrumb($series = null, $is_universe = false)
{
  $links = array();
  $links[] = l('Serier', '/serier');
  if (!isset($series)) {
    $parameters = drupal_get_query_parameters();

    if (isset($parameters['category'])) {
      $links[] = series_poc_create_link($parameters['category'], ['category' => $parameters['category']]);
    }
  } else {
    $category = Menu::get_category_series($series);
    $links[] = series_poc_create_link(ucFirst($category), ['category' => $category]);

    if (isset($series->universe_title)) {
      $links[] = series_poc_create_link($series->universe_title, ['universe' => $series->universe_title]);
    }

    if (!$is_universe) {
      $links[] = series_poc_create_link($series->title, ['series' => $series->title]);
    }
  }
  return implode('<span class="series_poc-breadcrumb-icon"></span>', $links);
}


function series_poc_get_number_in_series($series_item, $series_title)
{
  if (isset($series_item->series_memberships)) {
    foreach ($series_item->series_memberships as $member_ship) {
      $vars = get_object_vars($member_ship);
      if (isset($vars[$series_title])) {
        return implode(', ', $vars[$series_title]);
      }
    }
  }
}


function series_poc_render_cover_series($object, $title, $type = 'series')
{
  $url = 'serier';

  $image = theme('ting_object_cover', array('elements' => array('#object' => $object, '#image_style' => 'ting_search_carousel')));
  $options = array(
    'html' => TRUE,
    'attributes' => array('title' => $object->title),
    'query' => [$type => $title],
  );
  return l($image, $url, $options);
}

function series_poc_render_cover($object)
{
  $url = 'ting/object/' . $object->id;
  $image = theme('ting_object_cover', array('elements' => array('#object' => $object, '#image_style' => 'ting_search_carousel')));
  $options = array(
    'html' => TRUE,
    'attributes' => array('title' => $object->title),
  );
  return l($image, $url, $options);
}


function series_poc_create_link($title, $query = [])
{
  $options = array(
    'html' => TRUE,
    'query' => $query,
  );
  return l($title, 'serier', $options);
}

function series_poc_show_series_on_object($object)
{
  $seriesOnObjects = new SeriesOnObjects();
  return $seriesOnObjects->render_series_on_object($object);
}

function series_poc_check_work_is_in_example($pid) {
  $seriesOnObjects = new SeriesOnObjects();
  return $seriesOnObjects->check_work_is_in_example($pid);
}


class SeriesObject
{
  public $title;
  public $creators;
  public $cover;
  public $number;
  public $language;
  public $abstract;
  public $actions;
  public $universe;
}

class CoverObject
{
  public $title;
  public $creators;
  public $id;

  public function getCreators()
  {
    return ($this->creators);
  }

  public function getTitle()
  {
    return $this->title;
  }
}

function series_poc_get_category_data()
{
  $data = array(
    'Aske i munden, sand i skoen' => array(
      'category' => 'romaner'
    ),

    'Renée Ballard-serien' => array(
      'category' => 'krimi'
    ),

    'Harry Bosch-serien' => array(
      'category' => 'krimi'
    ),

    'Harry Potter' => array(
      'category' => 'fantasy'
    ),

    'The Harry Potter series' => array(
      'category' => 'fantasy'
    ),

    'Fantastic beasts (film)' => array(
      'category' => 'fantasy'
    ),

    'Fantastic beasts (filmmanuskript)' => array(
      'category' => 'fantasy'
    ),

    'Harry Potter (film)' => array(
      'category' => 'fantasy'
    ),

    'WOW - vild viden' => array(
      'category' => 'fag'
    ),

    'De 5' => array(
      'category' => 'børn'
    ),

    'De 5 (samling)' => array(
      'category' => 'børn'
    ),

    'Tænkepauser' => array(
      'category' => 'fag'
    ),

    'Totemdyrenes fald' => array(
      'category' => 'fantasy'
    ),

    'Totemdyrenes saga' => array(
      'category' => 'fantasy'
    ),

    'Kongens ranger' => array(
      'category' => 'fantasy'
    ),

    'Våbenbrødre' => array(
      'category' => 'fantasy'
    ),

    'Skyggens lærling' => array(
      'category' => 'fantasy'
    ),

    'Den sidste inkal' => array(
      'category' => 'romaner'
    ),

    'Før inkalen' => array(
      'category' => 'romaner'
    ),

    'Teknofædrene' => array(
      'category' => 'romaner'
    ),

    'Megalex' => array(
      'category' => 'romaner'
    ),

    'Metabaronernes kaste - Castaka' => array(
      'category' => 'romaner'
    ),

    'Metabaronernes kaste' => array(
      'category' => 'romaner'
    ),

    'John Difools hemmlighed' => array(
      'category' => 'romaner'
    ),

    'Inkalen' => array(
      'category' => 'fantasy'
    ),

    'Skøre facts' => array(
      'category' => 'fag'
    ),

    'Vide verden' => array(
      'category' => 'fag'
    ),

    'Rose-serien' => array(
      'category' => 'børn'
    ),

    'Cirklen åbnes' => array(
      'category' => 'børn'
    ),

    'Løvindens sang' => array(
      'category' => 'børn'
    ),

    'Magiens cirkel' => array(
      'category' => 'fantasy'
    ),

    'Asta' => array(
      'category' => 'børn'
    ),

    'Hårdes saga' => array(
      'category' => 'børn'
    ),

    'Wimpy Kid-serien' => array(
      'category' => 'børn'
    ),

    'Rowleys dagbog' => array(
      'category' => 'børn'
    ),

    'Den der lever stille' => array(
      'category' => 'romaner'
    ),

    'Skyggernes kniv (tegneserie)' => array(
      'category' => 'fantasy'
    ),

    'His dark materials (tegneserie)' => array(
      'category' => 'fantasy'
    ),

    'His dark materials' => array(
      'category' => 'fantasy'
    ),

    'His dark materials (Sæson 1)' => array(
      'category' => 'fantasy'
    ),

    'Det gyldne kompas (tegneserie)' => array(
      'category' => 'fantasy'
    ),

    'Forestillinger om Støv' => array(
      'category' => 'fantasy'
    ),

    'The book of dust' => array(
      'category' => 'fantasy'
    ),

    'Det gyldne kompas' => array(
      'category' => 'fantasy'
    ),


    'Cirklen universet' => array(
      'category' => 'fantasy'
    ),
    'His dark materials' => array(
      'category' => 'fantasy'
    ),
    'Inkal-sagaen' => array(
      'category' => 'romaner'
    ),
    'Jodoverset' => array(
      'category' => 'romaner'
    ),
    'Michael Connellys krimi-univers' => array(
      'category' => 'krimi'
    ),
    'Skandia' => array(
      'category' => 'fantasy'
    ),
    'Spirit animals' => array(
      'category' => 'fantasy'
    ),
    'Tortall universet' => array(
      'category' => 'fantasy'
    ),
    'Wimpy Kid' => array(
      'category' => 'børn'
    ),
    'Wizarding World' => array(
      'category' => 'fantasy'
    ),
  );
  return $data;
}
